{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/MERN/Front-End/src/places/pages/NewPlace.jsx\";\nimport React, { Fragment } from 'react';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../shared/components/UIElements/FormElements/Button/Button';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/utils/validator';\nimport { useHttpRequest } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport './Place.scss';\n\nconst NewPlace = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpRequest();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const formSubmitHandler = e => {\n    e.preventDefault();\n\n    try {\n      const responseData = sendRequest('http://localhost:5000/api/places', 'POST', JSON.stringify({\n        t\n      }));\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formSubmitHandler,\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    label: \"Title\",\n    type: \"text\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid text!!\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (atleast 5 characters)\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Add Place\")));\n};\n\nexport default NewPlace;","map":{"version":3,"names":["React","Fragment","useForm","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useHttpRequest","LoadingSpinner","ErrorModal","NewPlace","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","formSubmitHandler","e","preventDefault","responseData","JSON","stringify","t"],"sources":["/Users/dev/Documents/MERN/Front-End/src/places/pages/NewPlace.jsx"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Input from '../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../shared/components/UIElements/FormElements/Button/Button';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/utils/validator';\nimport { useHttpRequest } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nimport './Place.scss';\n\nconst NewPlace = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpRequest();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    try {\n      const responseData = sendRequest('http://localhost:5000/api/places', 'POST',JSON.stringify({\n        t\n      }))\n    } catch (error) {}\n  };\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form onSubmit={formSubmitHandler} className='place-form'>\n        {isLoading && <LoadingSpinner />}\n        <Input\n          id='title'\n          element='input'\n          label='Title'\n          type='text'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid text!!'\n          onInput={inputHandler}\n        />\n        <Input\n          id='description'\n          element='textarea'\n          label='Description'\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText='Please enter a valid description (atleast 5 characters)'\n          onInput={inputHandler}\n        />\n        <Input\n          id='address'\n          element='input'\n          label='Address'\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText='Please enter a valid address'\n          onInput={inputHandler}\n        />\n        <Button disabled={!formState.isValid}>Add Place</Button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,uDAAlB;AACA,OAAOC,MAAP,MAAmB,+DAAnB;AACA,SACEC,mBADF,EAEEC,iBAFF,QAGO,8BAHP;AAIA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AAEA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,WAApB;IAAiCC;EAAjC,IAAgDP,cAAc,EAApE;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bd,OAAO,CACvC;IACEe,KAAK,EAAE;MACLC,KAAK,EAAE,EADF;MAELC,OAAO,EAAE;IAFJ,CADT;IAKEC,WAAW,EAAE;MACXF,KAAK,EAAE,EADI;MAEXC,OAAO,EAAE;IAFE,CALf;IASEE,OAAO,EAAE;MACPH,KAAK,EAAE,EADA;MAEPC,OAAO,EAAE;IAFF;EATX,CADuC,EAevC,KAfuC,CAAzC;;EAkBA,MAAMG,iBAAiB,GAAIC,CAAD,IAAO;IAC/BA,CAAC,CAACC,cAAF;;IACA,IAAI;MACF,MAAMC,YAAY,GAAGZ,WAAW,CAAC,kCAAD,EAAqC,MAArC,EAA4Ca,IAAI,CAACC,SAAL,CAAe;QACzFC;MADyF,CAAf,CAA5C,CAAhC;IAGD,CAJD,CAIE,OAAOhB,KAAP,EAAc,CAAE;EACnB,CAPD;;EAQA,oBACE,oBAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,KAAK,EAAEA,KAAnB;IAA0B,OAAO,EAAEE,UAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAM,QAAQ,EAAEQ,iBAAhB;IAAmC,SAAS,EAAC,YAA7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGX,SAAS,iBAAI,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADhB,eAEE,oBAAC,KAAD;IACE,EAAE,EAAC,OADL;IAEE,OAAO,EAAC,OAFV;IAGE,KAAK,EAAC,OAHR;IAIE,IAAI,EAAC,MAJP;IAKE,UAAU,EAAE,CAACL,iBAAiB,EAAlB,CALd;IAME,SAAS,EAAC,6BANZ;IAOE,OAAO,EAAEU,YAPX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAWE,oBAAC,KAAD;IACE,EAAE,EAAC,aADL;IAEE,OAAO,EAAC,UAFV;IAGE,KAAK,EAAC,aAHR;IAIE,UAAU,EAAE,CAACX,mBAAmB,CAAC,CAAD,CAApB,CAJd;IAKE,SAAS,EAAC,yDALZ;IAME,OAAO,EAAEW,YANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAXF,eAmBE,oBAAC,KAAD;IACE,EAAE,EAAC,SADL;IAEE,OAAO,EAAC,OAFV;IAGE,KAAK,EAAC,SAHR;IAIE,UAAU,EAAE,CAACV,iBAAiB,EAAlB,CAJd;IAKE,SAAS,EAAC,8BALZ;IAME,OAAO,EAAEU,YANX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAnBF,eA2BE,oBAAC,MAAD;IAAQ,QAAQ,EAAE,CAACD,SAAS,CAACI,OAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,eA3BF,CAFF,CADF;AAkCD,CA9DD;;AAgEA,eAAeT,QAAf"},"metadata":{},"sourceType":"module"}