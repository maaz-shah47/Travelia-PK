{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import Input from '../../shared/components/UIElements/FormElements/Input';\n// import {\n//   VALIDATOR_MINLENGTH,\n//   VALIDATOR_REQUIRE,\n// } from '../../shared/utils/validator';\n// import Button from '../../shared/components/UIElements/FormElements/Button/Button';\n// import './Place.scss';\n// import { useForm } from '../../shared/hooks/form-hook';\n// import Card from '../../shared/components/UIElements/Card';\n// const UpdatePlace = () => {\n//   const [isLoading, setIsLoading] = useState(true);\n//   const params = useParams();\n//   const [formState, inputHandler, setInputData] = useForm(\n//     {\n//       title: {\n//         value: '',\n//         isValid: false,\n//       },\n//       description: {\n//         value: '',\n//         isValid: false,\n//       },\n//       address: {\n//         value: '',\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n//   const identifiedPlace = DUMMY_PLACES.find(\n//     (place) => place.id === params.placeId\n//   );\n//   useEffect(() => {\n//     if (identifiedPlace) {\n//       setInputData(\n//         {\n//           title: {\n//             value: identifiedPlace.title,\n//             isValid: true,\n//           },\n//           description: {\n//             value: identifiedPlace.description,\n//             isValid: true,\n//           },\n//           address: {\n//             value: identifiedPlace.address,\n//             isValid: true,\n//           },\n//         },\n//         true\n//       );\n//     }\n//     setIsLoading(false);\n//   }, [identifiedPlace, setInputData]);\n//   if (!identifiedPlace) {\n//     return (\n//       <div className='center'>\n//         <Card>\n//           <h2>No Place found!</h2>\n//         </Card>\n//       </div>\n//     );\n//   }\n//   if (isLoading) {\n//     return (\n//       <div className='center'>\n//         <h2>Loading...</h2>\n//       </div>\n//     );\n//   }\n//   const updateSubmitHandler = (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//   };\n//   return (\n//     <form onSubmit={updateSubmitHandler} className='place-form'>\n//       <Input\n//         id='title'\n//         element='input'\n//         label='Title'\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText='Please enter a valid title!!'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.title.value}\n//         initialValid={formState.inputs.title.isValid}\n//       />\n//       <Input\n//         id='description'\n//         label='Description'\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         errorText='Please enter a valid description (atleast 5 characters)'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.description.value}\n//         initialValid={formState.inputs.description.isValid}\n//       />\n//       <Input\n//         id='address'\n//         element='input'\n//         label='Address'\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText='Please enter a valid address!!'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.address.value}\n//         initialValid={formState.inputs.address.isValid}\n//       />\n//       <Button type='submit' disabled={!formState.isValid}>\n//         Update Place\n//       </Button>\n//     </form>\n//   );\n// };\n// export default UpdatePlace;","map":{"version":3,"names":[],"sources":["/Users/dev/Documents/MERN/Front-End/src/places/pages/UpdatePlace.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import Input from '../../shared/components/UIElements/FormElements/Input';\n// import {\n//   VALIDATOR_MINLENGTH,\n//   VALIDATOR_REQUIRE,\n// } from '../../shared/utils/validator';\n// import Button from '../../shared/components/UIElements/FormElements/Button/Button';\n\n// import './Place.scss';\n// import { useForm } from '../../shared/hooks/form-hook';\n// import Card from '../../shared/components/UIElements/Card';\n\n// const UpdatePlace = () => {\n//   const [isLoading, setIsLoading] = useState(true);\n//   const params = useParams();\n\n//   const [formState, inputHandler, setInputData] = useForm(\n//     {\n//       title: {\n//         value: '',\n//         isValid: false,\n//       },\n//       description: {\n//         value: '',\n//         isValid: false,\n//       },\n//       address: {\n//         value: '',\n//         isValid: false,\n//       },\n//     },\n//     false\n//   );\n\n//   const identifiedPlace = DUMMY_PLACES.find(\n//     (place) => place.id === params.placeId\n//   );\n\n//   useEffect(() => {\n//     if (identifiedPlace) {\n//       setInputData(\n//         {\n//           title: {\n//             value: identifiedPlace.title,\n//             isValid: true,\n//           },\n//           description: {\n//             value: identifiedPlace.description,\n//             isValid: true,\n//           },\n//           address: {\n//             value: identifiedPlace.address,\n//             isValid: true,\n//           },\n//         },\n//         true\n//       );\n//     }\n//     setIsLoading(false);\n//   }, [identifiedPlace, setInputData]);\n\n//   if (!identifiedPlace) {\n//     return (\n//       <div className='center'>\n//         <Card>\n//           <h2>No Place found!</h2>\n//         </Card>\n//       </div>\n//     );\n//   }\n\n//   if (isLoading) {\n//     return (\n//       <div className='center'>\n//         <h2>Loading...</h2>\n//       </div>\n//     );\n//   }\n//   const updateSubmitHandler = (event) => {\n//     event.preventDefault();\n//     console.log(formState);\n//   };\n//   return (\n//     <form onSubmit={updateSubmitHandler} className='place-form'>\n//       <Input\n//         id='title'\n//         element='input'\n//         label='Title'\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText='Please enter a valid title!!'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.title.value}\n//         initialValid={formState.inputs.title.isValid}\n//       />\n//       <Input\n//         id='description'\n//         label='Description'\n//         validators={[VALIDATOR_MINLENGTH(5)]}\n//         errorText='Please enter a valid description (atleast 5 characters)'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.description.value}\n//         initialValid={formState.inputs.description.isValid}\n//       />\n//       <Input\n//         id='address'\n//         element='input'\n//         label='Address'\n//         validators={[VALIDATOR_REQUIRE()]}\n//         errorText='Please enter a valid address!!'\n//         onInput={inputHandler}\n//         initialValue={formState.inputs.address.value}\n//         initialValid={formState.inputs.address.isValid}\n//       />\n//       <Button type='submit' disabled={!formState.isValid}>\n//         Update Place\n//       </Button>\n//     </form>\n//   );\n// };\n\n// export default UpdatePlace;\n"],"mappings},"metadata":{},"sourceType":"module"}