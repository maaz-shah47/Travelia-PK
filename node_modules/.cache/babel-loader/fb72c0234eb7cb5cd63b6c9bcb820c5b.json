{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/MERN/Front-End/src/places/pages/UpdatePlace.jsx\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/UIElements/FormElements/Input';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/utils/validator';\nimport Button from '../../shared/components/UIElements/FormElements/Button/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpRequest } from '../../shared/hooks/http-hook';\nimport './Place.scss';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpRequest();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const {\n    placeId\n  } = useParams();\n  const [formState, inputHandler, setInputData] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const getPlaceById = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n        setLoadedPlace(responseData.place);\n        setInputData({\n          title: {\n            value: responseData.place.title,\n            isValid: true\n          },\n          description: {\n            value: responseData.place.description,\n            isValid: true\n          },\n          address: {\n            value: responseData.place.address,\n            isValid: true\n          }\n        }, true);\n      } catch (error) {}\n    };\n\n    getPlaceById();\n  }, [sendRequest]);\n\n  if (!loadedPlace && !error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"No Place found!\")));\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const updateSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`, 'PATCH', JSON.stringify({}));\n    } catch (error) {}\n\n    console.log(formState);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), !isLoading && loadedPlace && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: updateSubmitHandler,\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title!!\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.title,\n    initialValid: loadedPlace.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (atleast 5 characters)\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.description,\n    initialValid: loadedPlace.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid address!!\",\n    onInput: inputHandler,\n    initialValue: loadedPlace.address,\n    initialValid: loadedPlace.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Update Place\")));\n};\n\nexport default UpdatePlace;","map":{"version":3,"names":["React","Fragment","useEffect","useState","useParams","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","Card","useHttpRequest","LoadingSpinner","ErrorModal","UpdatePlace","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","formState","inputHandler","setInputData","title","value","isValid","description","address","getPlaceById","responseData","place","updateSubmitHandler","event","preventDefault","JSON","stringify","console","log"],"sources":["/Users/dev/Documents/MERN/Front-End/src/places/pages/UpdatePlace.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Input from '../../shared/components/UIElements/FormElements/Input';\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../shared/utils/validator';\nimport Button from '../../shared/components/UIElements/FormElements/Button/Button';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport Card from '../../shared/components/UIElements/Card';\nimport { useHttpRequest } from '../../shared/hooks/http-hook';\n\nimport './Place.scss';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst UpdatePlace = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpRequest();\n  const [loadedPlace, setLoadedPlace] = useState();\n\n  const { placeId } = useParams();\n\n  const [formState, inputHandler, setInputData] = useForm(\n    {\n      title: {\n        value: '',\n        isValid: false,\n      },\n      description: {\n        value: '',\n        isValid: false,\n      },\n      address: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  useEffect(() => {\n    const getPlaceById = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5000/api/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setInputData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true,\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true,\n            },\n            address: {\n              value: responseData.place.address,\n              isValid: true,\n            },\n          },\n          true\n        );\n      } catch (error) {}\n    };\n    getPlaceById();\n  }, [sendRequest]);\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className='center'>\n        <Card>\n          <h2>No Place found!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className='center'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  const updateSubmitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      const responseData = await sendRequest(\n        `http://localhost:5000/api/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          \n        })\n      );\n    } catch (error) {}\n    console.log(formState);\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form onSubmit={updateSubmitHandler} className='place-form'>\n          <Input\n            id='title'\n            element='input'\n            label='Title'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid title!!'\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={loadedPlace.title}\n          />\n          <Input\n            id='description'\n            label='Description'\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText='Please enter a valid description (atleast 5 characters)'\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={loadedPlace.description}\n          />\n          <Input\n            id='address'\n            element='input'\n            label='Address'\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please enter a valid address!!'\n            onInput={inputHandler}\n            initialValue={loadedPlace.address}\n            initialValid={loadedPlace.address}\n          />\n          <Button type='submit' disabled={!formState.isValid}>\n            Update Place\n          </Button>\n        </form>\n      )}\n    </Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}