{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/MERN/traveliaPK/Front-End/src/users/pages/Auth/Auth.jsx\";\nimport React, { useState, useContext, Fragment } from 'react';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../../shared/utils/validator';\nimport { useHttpRequest } from '../../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport Input from '../../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../../shared/components/UIElements/FormElements/Button/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport './Auth.scss';\nimport { UserContext } from '../../../shared/context/auth-context';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\n\nconst Auth = () => {\n  const [isLoginState, setIsLoginState] = useState(true);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpRequest();\n  const {\n    login\n  } = useContext(UserContext);\n  const [formState, inputHandler, setInputData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginState) {\n      try {\n        await sendRequest('http://localhost:5000/api/users/login', 'POST', {\n          'Content-Type': 'application/json'\n        }, JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }));\n        login();\n      } catch (err) {}\n    } else {\n      try {\n        await sendRequest('http://localhost:5000/api/users/signup', 'POST', {\n          'Content-Type': 'application/json'\n        }, JSON.stringify({\n          name: formState.inputs.name.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }));\n        login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || 'Something went wrong. Please try again');\n      }\n    }\n  };\n\n  const toggleAuthState = () => {\n    if (!isLoginState) {\n      setInputData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid, formState.inputs.password.isValid);\n    } else {\n      setInputData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginState(prevState => !prevState);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: errorHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, isLoginState ? 'Login' : 'Sign up'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, !isLoginState && /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    label: \"Name\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please provide a name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    label: \"Email\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()],\n    errorText: \"Please provide a valid email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    label: \"Password\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(8)],\n    errorText: \"Password must be atleast 8 characters long\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, isLoginState ? 'Login' : 'Sign up', ' ')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: toggleAuthState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, isLoginState ? 'SIGNUP' : 'LOGIN')));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","Fragment","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useHttpRequest","LoadingSpinner","Input","Button","Card","UserContext","ErrorModal","Auth","isLoginState","setIsLoginState","isLoading","error","sendRequest","clearError","login","formState","inputHandler","setInputData","email","value","isValid","password","authSubmitHandler","event","preventDefault","JSON","stringify","inputs","err","name","setIsLoading","setError","message","toggleAuthState","undefined","prevState","errorHandler"],"sources":["/Users/dev/Documents/MERN/traveliaPK/Front-End/src/users/pages/Auth/Auth.jsx"],"sourcesContent":["import React, { useState, useContext, Fragment } from 'react';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../../shared/utils/validator';\nimport { useHttpRequest } from '../../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\nimport Input from '../../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../../shared/components/UIElements/FormElements/Button/Button';\nimport Card from '../../../shared/components/UIElements/Card';\n\nimport './Auth.scss';\nimport { UserContext } from '../../../shared/context/auth-context';\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\n\nconst Auth = () => {\n  const [isLoginState, setIsLoginState] = useState(true);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpRequest();\n\n  const { login } = useContext(UserContext);\n  const [formState, inputHandler, setInputData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n    if (isLoginState) {\n      try {\n        await sendRequest(\n          'http://localhost:5000/api/users/login',\n          'POST',\n          {\n            'Content-Type': 'application/json',\n          },\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          })\n        );\n        login();\n      } catch (err) {}\n    } else {\n      try {\n        await sendRequest(\n          'http://localhost:5000/api/users/signup',\n          'POST',\n          {\n            'Content-Type': 'application/json',\n          },\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          })\n        );\n        \n        login();\n      } catch (err) {\n        setIsLoading(false);\n        setError(err.message || 'Something went wrong. Please try again');\n      }\n    }\n  };\n  const toggleAuthState = () => {\n    if (!isLoginState) {\n      setInputData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid,\n        formState.inputs.password.isValid\n      );\n    } else {\n      setInputData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginState((prevState) => !prevState);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className='authentication'>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>{isLoginState ? 'Login' : 'Sign up'}</h2>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginState && (\n            <Input\n              id='name'\n              type='text'\n              placeholder='Name'\n              label='Name'\n              element='input'\n              onInput={inputHandler}\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText='Please provide a name'\n            />\n          )}\n          <Input\n            id='email'\n            type='email'\n            placeholder='Email'\n            label='Email'\n            element='input'\n            onInput={inputHandler}\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\n            errorText='Please provide a valid email address'\n          />\n          <Input\n            id='password'\n            type='password'\n            placeholder='Password'\n            label='Password'\n            element='input'\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(8)]}\n            errorText='Password must be atleast 8 characters long'\n          />\n          <Button disabled={!formState.isValid}>\n            {isLoginState ? 'Login' : 'Sign up'}{' '}\n          </Button>\n        </form>\n        <Button inverse onClick={toggleAuthState}>\n          {isLoginState ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}