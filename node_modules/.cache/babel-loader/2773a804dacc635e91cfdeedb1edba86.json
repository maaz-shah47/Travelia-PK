{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/MERN/traveliaPK/Front-End/src/users/pages/Auth/Auth.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../../shared/utils/validator';\nimport Input from '../../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../../shared/components/UIElements/FormElements/Button/Button';\nimport Card from '../../../shared/components/UIElements/Card';\nimport './Auth.scss';\nimport { UserContext } from '../../../shared/context/auth-context';\n\nconst Auth = () => {\n  const [isLoginState, setIsLoginState] = useState(true);\n  const [] = useState(false);\n  const {\n    login\n  } = useContext(UserContext);\n  const [formState, inputHandler, setInputData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n    console.log(formState.inputs.email.value);\n\n    if (isLoginState) {} else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (err) {\n        console.log('Something went wrong..');\n      }\n    }\n\n    login();\n  };\n\n  const toggleAuthState = () => {\n    if (!isLoginState) {\n      setInputData({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid, formState.inputs.password.isValid);\n    } else {\n      setInputData({ ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginState(prevState => !prevState);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, isLoginState ? 'Login' : 'Sign up'), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, !isLoginState && /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    label: \"Name\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please provide a name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    label: \"Email\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()],\n    errorText: \"Please provide a valid email address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    label: \"Password\",\n    element: \"input\",\n    onInput: inputHandler,\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(8)],\n    errorText: \"Password must be atleast 8 characters long\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, isLoginState ? 'Login' : 'Sign up', ' ')), /*#__PURE__*/React.createElement(Button, {\n    inverse: true,\n    onClick: toggleAuthState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, isLoginState ? 'SIGNUP' : 'LOGIN'));\n};\n\nexport default Auth;","map":{"version":3,"names":["React","useState","useContext","useForm","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Input","Button","Card","UserContext","Auth","isLoginState","setIsLoginState","login","formState","inputHandler","setInputData","email","value","isValid","password","authSubmitHandler","event","preventDefault","console","log","inputs","response","fetch","method","headers","body","JSON","stringify","name","data","json","err","toggleAuthState","undefined","prevState"],"sources":["/Users/dev/Documents/MERN/traveliaPK/Front-End/src/users/pages/Auth/Auth.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useForm } from '../../../shared/hooks/form-hook';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from '../../../shared/utils/validator';\nimport Input from '../../../shared/components/UIElements/FormElements/Input';\nimport Button from '../../../shared/components/UIElements/FormElements/Button/Button';\nimport Card from '../../../shared/components/UIElements/Card';\n\nimport './Auth.scss';\nimport { UserContext } from '../../../shared/context/auth-context';\n\nconst Auth = () => {\n  const [isLoginState, setIsLoginState] = useState(true);\n  const [  ] = useState(false)\n  const { login } = useContext(UserContext);\n  const [formState, inputHandler, setInputData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false,\n      },\n      password: {\n        value: '',\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n    console.log(formState.inputs.email.value);\n    if (isLoginState) {\n    } else {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (err) {\n        console.log('Something went wrong..');\n      }\n    }\n    login();\n  };\n  const toggleAuthState = () => {\n    if (!isLoginState) {\n      setInputData(\n        {\n          ...formState.inputs,\n          name: undefined,\n        },\n        formState.inputs.email.isValid,\n        formState.inputs.password.isValid\n      );\n    } else {\n      setInputData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginState((prevState) => !prevState);\n  };\n  return (\n    <Card className='authentication'>\n      <h2>{isLoginState ? 'Login' : 'Sign up'}</h2>\n      <form onSubmit={authSubmitHandler}>\n        {!isLoginState && (\n          <Input\n            id='name'\n            type='text'\n            placeholder='Name'\n            label='Name'\n            element='input'\n            onInput={inputHandler}\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText='Please provide a name'\n          />\n        )}\n        <Input\n          id='email'\n          type='email'\n          placeholder='Email'\n          label='Email'\n          element='input'\n          onInput={inputHandler}\n          validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\n          errorText='Please provide a valid email address'\n        />\n        <Input\n          id='password'\n          type='password'\n          placeholder='Password'\n          label='Password'\n          element='input'\n          onInput={inputHandler}\n          validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(8)]}\n          errorText='Password must be atleast 8 characters long'\n        />\n        <Button disabled={!formState.isValid}>\n          {isLoginState ? 'Login' : 'Sign up'}{' '}\n        </Button>\n      </form>\n      <Button inverse onClick={toggleAuthState}>\n        {isLoginState ? 'SIGNUP' : 'LOGIN'}\n      </Button>\n    </Card>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}